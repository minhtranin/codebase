import * as React from 'react'
import * as ReactModal from 'react-modal'
import styled, { createGlobalStyle } from './styled-components'

const ModalContentWrapper = styled.div`
  position: relative;
  margin: 0 auto;
  padding: 36px 44px 30px;
  min-width: 300px;
  max-width: 90vw;
  min-height: 200px;
  background: #fff;
  border-radius: 8px;
  pointer-events: auto;
`

const ModalTitle = styled.h2`
  padding-bottom: 30px;
  padding-right: 15px;
  margin-bottom: 30px;
  font-weight: 400;
  font-size: 19px;
  color: ${props => props.theme.colors.FIELD_TEXT};
  border-bottom: 1px solid ${props => props.theme.colors.BORDER};
`

const CloseModalBtn = styled.button.attrs({
  type: 'button'
})`
  position: absolute;
  top: 11px;
  right: 12px;
  width: 24px;
  height: 24px;
  background: transparent;
  font-size: 42px;
  font-weight: 300;
  line-height: 25px;
  text-align: center;
  border: 0 none;
  color: ${props => props.theme.colors.LABEL_TEXT};
  cursor: pointer;

  &:focus,
  &:active {
    outline: 0 none;
  }

  &:hover {
    opacity: 0.8;
  }
`

const GlobalStyle = createGlobalStyle`
  body {
    overflow-y: hidden;
  }
`

interface ModalProps {
  isOpen: boolean
  onRequestClose: () => void
  className?: string
  children: React.ReactNode
  centerVertically?: boolean
  title?: string
}

const Modal: React.FunctionComponent<ModalProps> = props => {
  return (
    <ReactModal
      isOpen={props.isOpen}
      ariaHideApp={false}
      // attach class generated by styled to entire portal
      portalClassName={props.className}
      onRequestClose={(e: MouseEvent) => {
        e.stopPropagation()
        props.onRequestClose()
      }}
    >
      <ModalContentWrapper>
        {props.title && (<ModalTitle>{props.title}</ModalTitle>)}
        {props.children}
        <CloseModalBtn
          onClick={props.onRequestClose}
        >
          &times;
        </CloseModalBtn>
      </ModalContentWrapper>
      <GlobalStyle />
    </ReactModal>
  )
}

/*
  Styling react-modal with styled-components inspired by:
  https://github.com/styled-components/styled-components/issues/1494#issuecomment-363362709
  but react-modal className and overlayClassName not customized because in such case react-modal
  ignores own default styles totally: http://reactcommunity.org/react-modal/styles/
  Some !importants are unfortunately needed.
*/
const StyledModal = styled(Modal)<ModalProps>`
  .ReactModal__Overlay {
    z-index: 1000;
    background-color: rgba(0, 0, 0, 0.8) !important;
    overflow-y: auto;
  }

  .ReactModal__Content {
    position: static !important;
    background: transparent !important;
    border: 0 none !important;
    padding: 0 !important;
    overflow: hidden !important;
    margin: 50px 0;
    display: flex;
    align-items: ${props => props.centerVertically ? 'center' : 'flex-start'};
    pointer-events: none;
    min-height: calc(100vh - 120px);
  }
`

export default StyledModal
